{"version":3,"sources":["axios.js","Chat.js","Message.js","ChatInput.js","StateProvider.js","SidebarOption.js","Sidebar.js","reducer.js","Login.js","components/Card.js","components/Browse.js","components/OnHoverDisplay.js","components/SocialNetwork.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","pusher","Pusher","cluster","global","URLSearchParams","Chat","useParams","type","title","roomId","useState","roomDetails","setRoomDetails","roomMessages","setRoomMessages","getConversation","useCallback","params","id","get","then","res","data","useEffect","channel","subscribe","grpChannel","bind","className","map","message","timestamp","user","userImage","channelName","channelId","Message","src","alt","Date","parseInt","toUTCString","ChatInput","input","setInput","useStateValue","value","onChange","e","target","placeholder","toLowerCase","onClick","preventDefault","post","now","Fname","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useContext","SidebarOption","Icon","addChannelOption","history","useHistory","chatName","prompt","name","push","ListItem","button","key","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","display","nested","paddingLeft","spacing","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Sidebar","chats","setChats","groups","setgroups","peoples","setpeoples","open","setOpen","chanOpen","setChanOpen","peopOpen","setpeopOpen","grpOpen","setgrpOpen","getList","classes","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","InsertCommentIcon","EventIcon","SupervisedUserCircleIcon","GroupIcon","Collapse","in","timeout","unmountOnExit","component","disablePadding","grp","grp_id","pep","AddIcon","chat","actionTypes","state","action","console","log","BootstrapInput","withStyles","marginTop","borderRadius","backgroundColor","palette","background","border","fontSize","fontFamily","join","borderColor","boxShadow","InputBase","flexDirection","avatar","margin","secondary","main","form","submit","SignUp","dispatch","Firstname","setFName","Lastname","setLName","Email","setEmail","Profession","setProf","Container","maxWidth","Avatar","onSubmit","firstName","lastName","email","profession","Lname","_id","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","InputLabel","Select","labelId","style","marginBottom","MenuItem","Button","media","height","modal","shadows","CardDisplay","grpName","grpDescr","grpImage","admin","grpID","React","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","size","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","cardRoot","maxHeight","overflow","alignContent","cardAction","Block","search","shape","alpha","common","white","breakpoints","up","searchIcon","pointerEvents","zIndex","inputRoot","inputInput","setGroups","grpname","setGrpName","grpDes","setGrpDesc","grpImg","setGrpImg","getGroups","inputProps","green","group","Name","description","accept","multiple","event","file","files","htmlFor","node","borderWidth","borderStyle","grey","textAlign","pointer","blue","OnHoverDisplay","anchorEl","setAnchorEl","Boolean","undefined","Position","Top","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","keys","relation","Bottom","onInit","reactFlowInstance","nodeTypes","hoverDisplay","edgenum","OverviewFlow","useNodesState","nodes","onNodesChange","useEdgesState","edges","setEdges","onEdgesChange","onConnect","eds","addEdge","useReactFlow","update","newNode","x","Math","random","y","addNodes","sources","newEdge","source","fitView","attributionPosition","nodeStrokeColor","n","nodeColor","nodeBorderRadius","gap","App","path","SocialNetwork","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e547ac21.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://commdash.uqcloud.net'\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect, useCallback } from 'react'\r\nimport \"./Chat.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { InfoOutlined, StarBorderOutlined } from '@material-ui/icons';\r\nimport Message from './Message'\r\nimport ChatInput from './ChatInput';\r\nimport axios from './axios'; \r\nimport Pusher from 'pusher-js';\r\n\r\nconst pusher = new Pusher('d2e40102bb65c4ab886c', {\r\n    cluster: 'ap4'\r\n});\r\n\r\nglobal.URLSearchParams = URLSearchParams;\r\nconst Chat = () => {\r\n    const { type,title,roomId } = useParams();\r\n    const [roomDetails, setRoomDetails] = useState(null);\r\n    const [roomMessages, setRoomMessages] = useState([]);\r\n\r\n    const getConversation = useCallback(() => {\r\n        var parameters = {type:type,\r\n                        title: title,\r\n                        id : roomId\r\n                    }; \r\n        const params = new URLSearchParams(parameters);\r\n        \r\n        if (type == \"group\") {\r\n            axios.get(`/get/groupconversation?${params}`).then((res) =>{\r\n                setRoomDetails(title)\r\n                setRoomMessages(res.data)\r\n            })\r\n        }  else {\r\n            axios.get(`/get/conversation?${params}`).then((res) =>{\r\n                setRoomDetails(title)\r\n                setRoomMessages(res.data)\r\n            })\r\n        }\r\n        \r\n    },[type,title,roomId]);\r\n\r\n    useEffect(() => {\r\n                \r\n        getConversation()\r\n\r\n        //realtime processing\r\n        const channel = pusher.subscribe('conversation');\r\n        const grpChannel = pusher.subscribe('grps');\r\n\r\n        channel.bind('newMessage', function(data) {\r\n            getConversation()\r\n        });\r\n\r\n        grpChannel.bind('newgrps', function(data){\r\n            getConversation()\r\n          });\r\n    },[getConversation])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <div className=\"chat__headerLeft\">\r\n                    <h4 className=\"chat__channelName\">\r\n                    <strong> # General </strong>\r\n                        {/* <strong> # {roomId} </strong> */}\r\n                        {/* <strong>#general</strong> */}\r\n                        <StarBorderOutlined />\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <p><InfoOutlined /> Details</p>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__messages\">\r\n                {roomMessages.map(({ message, timestamp, user, userImage }) => (\r\n                    <Message\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        user={user}\r\n                        userImage={userImage}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <ChatInput type = {type} channelName={roomDetails} channelId={roomId} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport \"./Message.css\";\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n    return (\r\n        <div className=\"message\">\r\n            <img src={userImage} alt=\"\" />\r\n            <div className=\"message__info\">\r\n                <h4>\r\n                    {user}{\" \"}\r\n                    <span className=\"message__timestamp\">\r\n                        {new Date(parseInt(timestamp)).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from './axios';\r\nimport React, { useState } from 'react'\r\nimport \"./ChatInput.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nglobal.URLSearchParams = URLSearchParams;\r\nfunction ChatInput({ type, channelName, channelId }) {\r\n    const [input, setInput] = useState(\"\");\r\n    const [{ user }] = useStateValue();\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        var parameters = {\r\n            type: type,\r\n            title: channelName,\r\n            id : channelId\r\n        }; \r\n    \r\n        const params = new URLSearchParams(parameters);\r\n        if (channelId) {\r\n            if (type == \"group\") {\r\n                axios.post(`/new/groupmessage?${params}`, {\r\n                    message: input,\r\n                    timestamp: Date.now(),\r\n                    user: user.Fname ,\r\n                    userImage: \"https://www.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\"\r\n                })\r\n            } else {\r\n                axios.post(`/new/message?${params}`, {\r\n                    message: input,\r\n                    timestamp: Date.now(),\r\n                    user: user.Fname ,\r\n                    userImage: \"https://www.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\"\r\n                })\r\n            }\r\n           \r\n        }\r\n        setInput(\"\");\r\n    };\r\n    return (\r\n        <div className=\"chatInput\">\r\n            <form>\r\n                \r\n                <input\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder={`Message #${channelName?.toLowerCase()}`}\r\n                />\r\n                <button type=\"sumbit\" onClick={sendMessage}>SEND</button>\r\n            \r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from 'react';\r\nimport './SidebarOption.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from './axios'; \r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst SidebarOption = ({ Icon, id, addChannelOption, title, type }) => {\r\n    const history = useHistory();\r\n\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            history.push(`/room/${type}/${title}/${id}`)\r\n        } else {\r\n            history.push(`/${title}`);\r\n        }\r\n    };\r\n\r\n    const addChannel = () => {\r\n        const chatName = prompt(\"Please enter the channel name\");\r\n\r\n        if (chatName) {\r\n            axios.post(`/new/chat?id=${id}`, {\r\n                name: chatName,\r\n            })\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={addChannelOption ? addChannel : selectChannel}>\r\n            {Icon ? (\r\n                <ListItem button key= {title}>\r\n                    <ListItemIcon><Icon /></ListItemIcon>\r\n                    <ListItemText primary= {title} />\r\n                </ListItem>\r\n            ) : (\r\n                     <ListItem button key={title}>\r\n                        <ListItemIcon>#</ListItemIcon>\r\n                        <ListItemText primary= {title} />\r\n                    </ListItem>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarOption from \"./SidebarOption\"\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from './axios'; \r\nimport { useStateValue } from './StateProvider';\r\nimport Pusher from 'pusher-js';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst pusher = new Pusher('d2e40102bb65c4ab886c', {\r\n    cluster: 'ap4'\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Sidebar() {\r\n    const [chats, setChats] = useState([]);\r\n    const [groups, setgroups] = useState([]);\r\n    const [peoples, setpeoples] = useState([]);\r\n    const [{user}] = useStateValue();\r\n    const [open, setOpen] = useState(true);\r\n    const [chanOpen, setChanOpen] = useState(true);\r\n    const [peopOpen, setpeopOpen] = useState(true);\r\n    const [grpOpen, setgrpOpen] = useState(true);\r\n\r\n    const handleClick = () => {\r\n      setChanOpen(!chanOpen);\r\n    };\r\n\r\n    const handlePeopClick = () => {\r\n      setpeopOpen(!peopOpen);\r\n    };\r\n    const handleGrpClick = () => {\r\n      setgrpOpen(!grpOpen);\r\n    };\r\n\r\n    const  getList = () => {\r\n        axios.get(`/get/chatlist?id=${user.id}`).then((res) => {\r\n          setChats(res.data)\r\n        })\r\n        axios.get(`/get/peoplelist?id=${user.id}`).then((res) => {\r\n          setpeoples(res.data)\r\n        })\r\n        axios.get(`/get/grouplist?id=${user.id}`).then((res) => {\r\n          setgroups(res.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n       getList()\r\n\r\n       //realtime processing\r\n       const channel = pusher.subscribe('chats');\r\n       const grpChannel = pusher.subscribe('grps');\r\n\r\n       channel.bind('newChats', function(data) {\r\n         getList()\r\n       });\r\n\r\n       grpChannel.bind('newgrps', function(data){\r\n         getList()\r\n       });\r\n\r\n    }, [])\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n                CommDash, Get Connected!\r\n            </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n            paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n\r\n            <div className={classes.drawerHeader}>\r\n                    <div><h1>Welcome {user.Fname} </h1></div>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>                \r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Announcements\" type = \"announcements\" />\r\n\r\n            <SidebarOption Icon={EventIcon} title=\"Events\" type = \"events\" />\r\n\r\n            <SidebarOption Icon={SupervisedUserCircleIcon} title=\"Groups\"  />\r\n\r\n            <SidebarOption Icon={GroupIcon} title=\"People\"  />\r\n\r\n            <Divider />  \r\n\r\n            \r\n            <ListItem button onClick={handleGrpClick}>\r\n              <ListItemIcon>\r\n                {grpOpen ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItemIcon>\r\n              <ListItemText primary= \"Groups\" />\r\n            </ListItem>\r\n            <Collapse in={grpOpen} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                {\r\n                  groups.map(grp => (\r\n                    <ListItem button className={classes.nested}>\r\n                      <SidebarOption title={grp.name} id={grp.grp_id} type = \"group\"/>\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            </Collapse>\r\n\r\n            <ListItem button onClick={handlePeopClick}>\r\n              <ListItemIcon>\r\n                {peopOpen ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItemIcon>\r\n              <ListItemText primary= \"People\" />\r\n            </ListItem>\r\n            <Collapse in={peopOpen} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                {\r\n                  peoples.map(pep => (\r\n                    <ListItem button className={classes.nested}>\r\n                      <SidebarOption title={pep.name} id={user.id} type = \"people\"/>\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            </Collapse>\r\n\r\n\r\n            <SidebarOption id={user.id} Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n            \r\n            <ListItem button onClick={handleClick}>\r\n              <ListItemIcon>\r\n                <TelegramIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Your Channels\" />\r\n              {chanOpen ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={chanOpen} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                {\r\n                  chats.map(chat => (\r\n                    <ListItem button className={classes.nested}>\r\n                      <SidebarOption title={chat.name} id={user.id} type = \"chats\"/>\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            </Collapse>\r\n            </List>\r\n        </Drawer>\r\n        <main\r\n            className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            \r\n        </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export const initialState = {\r\n    user: null,\r\n  };\r\n  \r\n  export const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n  \r\n    switch (action.type) {\r\n      case actionTypes.SET_USER:\r\n        return {\r\n          ...state,\r\n          user: action.user,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import React from 'react'\r\nimport \"./Login.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from './axios'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [state, dispatch] = useStateValue();\r\n  const [Firstname, setFName] = useState();\r\n  const [Lastname, setLName] = useState();\r\n  const [Email, setEmail] = useState();\r\n  const [Profession, setProf] = useState(\" \");\r\n\r\n\r\n    const signIn = (e) => {\r\n      e.preventDefault();\r\n      axios.post('/login', {\r\n        user: { \r\n          firstName: Firstname,\r\n          lastName: Lastname,\r\n          email: Email,\r\n          profession: Profession,\r\n        }\r\n    }).then((res) => {\r\n      dispatch({\r\n        type: actionTypes.SET_USER,\r\n        user: { Fname : Firstname ,\r\n                Lname: Lastname,\r\n                id: res.data._id,\r\n                email: Email\r\n              }\r\n      });\r\n      history.push(`/${res.data._id}`)\r\n    })\r\n    };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign IN\r\n        </Typography>\r\n        <form className={classes.form} onSubmit = {signIn}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={e => setFName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={e => setLName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <InputLabel id=\"profession-select-label\">Profession</InputLabel>\r\n              <Select\r\n                labelId=\"profession-select-label\"\r\n                id=\"profession-select\"\r\n                value={Profession}\r\n                style={{marginBottom: 10, width: 100 + \"%\"}}\r\n                onChange={e => setProf(e.target.value)}\r\n                input={<BootstrapInput />}\r\n                required\r\n              >\r\n                <MenuItem value={\"ATH\"}>Academic Title Holder</MenuItem>\r\n                <MenuItem value={\"UQ Staff\"}>UQ Staff</MenuItem>\r\n                <MenuItem value={\"Student\"}>Student</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Log In\r\n          </Button> \r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStateValue } from '../StateProvider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport axios from '../axios'; \r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n  root: {\r\n    marginTop:70,\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function CardDisplay({ grpName, grpDescr, grpImage,admin, grpID = null }) {\r\n  const classes = useStyles();\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const descrOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const addGroup = () => {\r\n    axios.post(`/add/group?id=${user.id}`, {\r\n        name: grpName,\r\n        grp_id: grpID,\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n          <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={grpImage}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {grpName}\r\n                  </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={descrOpen}>\r\n                Learn More\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={addGroup}>\r\n                Chat\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n            timeout: 500,\r\n            }}\r\n        >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">More about {grpName}</h2>\r\n            <p id=\"transition-modal-description\">{grpDescr}</p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useStateValue } from '../StateProvider';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport axios from '../axios'; \r\nimport Pusher from 'pusher-js';\r\nimport Cards from './Card.js'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Block } from '@material-ui/icons';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst pusher = new Pusher('d2e40102bb65c4ab886c', {\r\n  cluster: 'ap4'\r\n});\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 68,\r\n    marginBottom: 95,\r\n  },\r\n  cardRoot: {\r\n    maxWidth: 230,\r\n    maxHeight: 230,\r\n    overflow: \"hidden\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  cardAction: {\r\n    width: 100 + \"%\",\r\n    display: Block,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '80%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    zIndex: '100',\r\n    color: 'black',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: 'aliceblue',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '60%',\r\n      '&:focus': {\r\n        width: '100%',\r\n      },\r\n    },\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  },\r\n}));\r\n\r\nexport default function CardDisplay() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [{ user }] = useStateValue();\r\n  const [groups, setGroups] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [grpname, setGrpName] = useState(\" \");\r\n  const [grpDes, setGrpDesc] = useState(\" \");\r\n  const [grpImg, setGrpImg] = useState(\" \");\r\n\r\n  const createGroup = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n    axios.post('/new/groups', {\r\n      group : {\r\n        Name: grpname,\r\n        description: grpDes,\r\n        admin: user.id,\r\n        grpImage: grpImg\r\n    }\r\n  }).then((res) => {\r\n    axios.post(`/add/group?id=${user.id}`, {\r\n    \r\n    name: grpname,\r\n    grp_id: res.data._id\r\n    \r\n  })\r\n    history.push(`/${user.id}`)\r\n  })};\r\n\r\n  const handleUploadClick = (event) => {\r\n    var file = event.target.files[0];    \r\n    setGrpImg(file);\r\n  };\r\n\r\n\r\n  const descrOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const  getGroups = () => {\r\n    axios.get(`/get/groups`).then((res) => {\r\n      setGroups(res.data)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getGroups()\r\n\r\n    //realtime processing\r\n    const channel = pusher.subscribe('grps');\r\n    channel.bind('newgrps', function(data) {\r\n      getGroups()\r\n    });\r\n\r\n  }, [])\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </div>\r\n         <div className={classes.root}>\r\n         \r\n          <Grid container spacing={3}>\r\n            <Grid item xs= {4}>\r\n              <Card className={classes.cardRoot} onClick={descrOpen}>\r\n                <CardActionArea className={classes.cardAction}>\r\n                  <CardContent>\r\n                    <AddIcon style={{ color: green[500], height: 100 + \"%\", width: \"auto\" }} />\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          {\r\n             groups.map((grp) => (\r\n              <Grid item xs= {4}>\r\n                <Cards \r\n                grpName = {grp.group.Name}\r\n                grpDescr = {grp.group.description}\r\n                grpImage = {grp.group.grpImage}\r\n                admin = {grp.group.admin}\r\n                grpID = {grp._id}\r\n                />\r\n              </Grid>\r\n             ))\r\n           }\r\n          </Grid>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n            timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open}>\r\n              <div className={classes.paper}>\r\n              <form onSubmit = {createGroup}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"GrpName\"\r\n                      name=\"GroupName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"Group Name\"\r\n                      label=\"Group Name\"\r\n                      autoFocus\r\n                      onChange={e => setGrpName(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm = {6} >\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      id=\"contained-button-file\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={handleUploadClick}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                      <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload Image\r\n                      </Button>\r\n                    </label>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"Description\"\r\n                      label=\"Group Description\"\r\n                      name=\"Group Description\"\r\n                      autoComplete=\"Group Description\"\r\n                      onChange={e => setGrpDesc(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Create Group\r\n                </Button> \r\n              </form>\r\n\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n          <div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from '../axios'; \r\nimport { useStateValue } from '../StateProvider';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    node:{\r\n        height: 30,\r\n        width: 150,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: grey[900],\r\n        borderRadius: 5,\r\n        textAlign: 'center',\r\n        background: grey[50],\r\n    },\r\n    button:{\r\n        pointer: '',\r\n        zIndex: 999,\r\n        borderStyle: 'solid',\r\n        borderColor: blue[500],\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n      },\r\n      media: {\r\n        height: 140,\r\n      },\r\n  }));\r\n\r\nfunction OnHoverDisplay({ data }) {\r\n    const classes = useStyles();\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    const addPeople = () => {\r\n        axios.post(`/add/people?id=${user.id}`, {\r\n            id: data.keys,\r\n            name: data.value['firstName'],\r\n            relation: {name: 'Colleague'},\r\n        })\r\n      };\r\n\r\n      const open = Boolean(anchorEl);\r\n      const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div className = {classes.node}>\r\n            <Handle type=\"target\" position={Position.Top} />\r\n            <Typography aria-describedby={id} color=\"primary\" onClick={handleClick}>\r\n                {data.value['firstName']}\r\n            </Typography>\r\n            <Popover\r\n                id={id}\r\n                classes={{\r\n                paper: classes.paper,\r\n                }}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={data.value['userImage']}\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {data.value['firstName']} {data.value['lastName']}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h3\">\r\n                            Email: {data.value['email']}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h3\">\r\n                            Designation: {data.value['profession']}\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button className = {classes.button}size=\"small\" color=\"primary\" onClick={addPeople}>\r\n                        Chat\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Popover>\r\n            <Handle type=\"source\" position={Position.Bottom} id=\"b\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnHoverDisplay;\r\n","import Pusher from 'pusher-js';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  ReactFlowProvider,\r\n  useReactFlow,\r\n} from 'react-flow-renderer';\r\nimport axios from '../axios'; \r\nimport OnHoverDisplay  from './OnHoverDisplay';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nconst onInit = (reactFlowInstance) => console.log('flow loaded:', reactFlowInstance);\r\nconst pusher = new Pusher('d2e40102bb65c4ab886c', {\r\n  cluster: 'ap4'\r\n});\r\n\r\nconst nodeTypes = { hoverDisplay: OnHoverDisplay };\r\n\r\nlet edgenum = 0;\r\n\r\nconst OverviewFlow = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [{ user }] = useStateValue();\r\n  const onConnect = (params) => setEdges((eds) => addEdge(params, eds));\r\n  \r\n  const reactFlowInstance = useReactFlow();\r\n  \r\n  const update = useCallback(() => {\r\n    axios.get('/get/users').then((res) => {\r\n      for (var key in res.data) {\r\n        const newNode = {\r\n          id: key,\r\n          type: 'hoverDisplay',\r\n          position: {\r\n            x: Math.random() * 500,\r\n            y: Math.random() * 500,\r\n          },\r\n          data: {\r\n            keys: key,  \r\n            value: res.data[key]\r\n          },\r\n        };\r\n        reactFlowInstance.addNodes(newNode);\r\n      }\r\n    })   \r\n\r\n    const sources = user.id\r\n    axios.get(`/get/peoplelist?id=${user.id}`).then((res) => {\r\n      for (var pep in res.data) {\r\n        console.log(res.data)\r\n        console.log(sources)\r\n        console.log(res.data[pep].id)\r\n        const id = `${++edgenum}`;\r\n        const newEdge = {\r\n          id, \r\n          source: sources, \r\n          target: res.data[pep].id, \r\n        }\r\n        onConnect(newEdge)\r\n      }\r\n    })\r\n    \r\n  }, []);\r\n    \r\n  useEffect(() => {\r\n    update()\r\n    //realtime processing\r\n    const channel = pusher.subscribe('chats');\r\n\r\n    channel.bind('newChats', function(data) {\r\n      update()\r\n    });\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <ReactFlow\r\n      nodes={nodes}\r\n      edges={edges}\r\n      onNodesChange={onNodesChange}\r\n      onEdgesChange={onEdgesChange}\r\n      onConnect={onConnect}\r\n      onInit={onInit}\r\n      nodeTypes={nodeTypes}\r\n      fitView\r\n      attributionPosition=\"top-right\"\r\n    >\r\n      <MiniMap\r\n        nodeStrokeColor={(n) => {\r\n          if (n.style?.background) return n.style.background;\r\n          if (n.type === 'input') return '#0041d0';\r\n          if (n.type === 'output') return '#ff0072';\r\n          if (n.type === 'default') return '#1a192b';\r\n\r\n          return '#eee';\r\n        }}\r\n        nodeColor={(n) => {\r\n          if (n.style?.background) return n.style.background;\r\n\r\n          return '#fff';\r\n        }}\r\n        nodeBorderRadius={2}\r\n      />\r\n      <Controls />\r\n      <Background color=\"#aaa\" gap={16} />\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\n\r\nexport default function () {\r\n  return (\r\n    <ReactFlowProvider>\r\n      <OverviewFlow />\r\n    </ReactFlowProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Chat from './Chat'\r\nimport { useStateValue } from './StateProvider';\r\nimport Login from './Login';\r\nimport Browse from './components/Browse';\r\nimport SocialNetwork from './components/SocialNetwork.js';\r\n\r\nfunction App() {\r\n  const [{ user }] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n            <>\r\n              <div className=\"app__body\">\r\n                <Sidebar />\r\n                <Switch>\r\n                  <Route path=\"/room/:type/:title/:roomId\">\r\n                    <Chat />\r\n                  </Route>\r\n                  <Route path= '/Announcements/:user_id'>\r\n                    <h1 style={{marginTop: 18+ 'vh'}}>Welcome {user.name}</h1>\r\n                  </Route>\r\n\r\n                  <Route path=\"/Groups\">\r\n                    <Browse />\r\n                  </Route>\r\n\r\n                  <Route path=\"/People\">\r\n                    <SocialNetwork />\r\n                  </Route>\r\n                  \r\n                </Switch>\r\n              </div>\r\n            </>\r\n          )} \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StateProvider } from './StateProvider';\r\nimport reducer, { initialState } from './reducer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer} >\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}